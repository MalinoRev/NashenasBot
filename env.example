# Project
# A short name used by Docker Compose to namespace containers, networks, etc.
COMPOSE_PROJECT_NAME=nashenasbot

# Container timezone (e.g., UTC, Asia/Tehran)
TZ=UTC

# Bot
# polling or webhook. In polling mode, the bot fetches updates; in webhook, it exposes an HTTP endpoint.
BOT_MODE=polling
# Host port to expose the webhook app on (container always listens on 8080)
BOT_WEBHOOK_PORT=8080

# Telegram
# Your real bot token from BotFather
TELEGRAM_BOT_TOKEN=YOUR_TELEGRAM_BOT_TOKEN
# Bot username in Telegram (without @)
TELEGRAM_BOT_USERNAME=YOUR_BOT_USERNAME
# Public HTTPS URL for webhook (required only if BOT_MODE=webhook)
TELEGRAM_WEBHOOK_URL=
# Optional secret token validated against X-Telegram-Bot-Api-Secret-Token header
TELEGRAM_WEBHOOK_SECRET=

# Database (MySQL)
# Logical DB name and credentials used by the application and the mysql container
DATABASE_NAME=bot_db
DATABASE_USER=bot_user
DATABASE_PASSWORD=CHANGE_ME_STRONG_PASSWORD
# Docker service name for mysql (keep as 'mysql' unless you changed compose)
DATABASE_HOST=mysql
# Internal MySQL port (inside Docker network). Do NOT use published host port here.
DATABASE_PORT=3306
# SQLAlchemy async URL. If you provide mysql+pymysql://..., app normalizes it to mysql+asyncmy:// internally
DATABASE_URL=mysql+pymysql://bot_user:CHANGE_ME_STRONG_PASSWORD@mysql:3306/bot_db

# MySQL container envs (mapped from above)
MYSQL_DATABASE=${DATABASE_NAME}
MYSQL_USER=${DATABASE_USER}
MYSQL_PASSWORD=${DATABASE_PASSWORD}
# Root password for the mysql container (only for local dev/admin)
MYSQL_ROOT_PASSWORD=CHANGE_ME_ROOT_PASSWORD

# Redis
# Use internal Docker service name and port
REDIS_URL=redis://redis:6379/0

# Behavior flags
# If true, exit the bot process on disconnect/network errors and let Docker restart policy decide
BOT_EXIT_ON_DISCONNECT=false
# If true, on startup fetch pending updates via getUpdates before starting long polling
BOT_BACKFILL_ON_START=false

# Payments (Zarinpal)
# Zarinpal merchant id (required)
ZARINPAL_MERCHANT_ID=YOUR_MERCHANT_ID
# Base public site URL for payment callbacks (e.g., https://example.com)
SITE_BASE_URL=https://your-domain.example
# Optional: use sandbox endpoints (true/false)
ZARINPAL_USE_SANDBOX=true

# Admin
# Telegram numeric user id of the bot admin (optional)
TELEGRAM_ADMIN_USER_ID=123456789

# Pricing
# Account deletion price (in Toman)
ACCOUNT_DELETE_PRICE=0

# VIP rank price (in Toman)
VIP_RANK_PRICE=0

# VIP rank duration (e.g., 30d, 90d, 365d)
VIP_RANK_TIME=30d

# Unban price (in Toman)
UNBAN_PRICE=0

# Cache channel ID for Telegram caching (optional)
CACHE_CHANNEL_ID=-1001234567890

# Branding
BOT_BRAND_NAME=Your Bot Name
BOT_SUPPORT_USERNAME=supportUsername
BOT_CHANNEL_SLUG=channelSlug